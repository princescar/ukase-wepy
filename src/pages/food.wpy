<template>
  <view class="container">
    <header>
      <view slot="children" class="image" style="background-image: url('{{food.image}}');"/>
    </header>
    <view class="card">
      <view class="info">
        <view class="title">
          {{food.name}}
          <span class="heat">{{food.heat}} Kcal</span>
        </view>
        <view class="price">¥ {{food.price}}</view>
      </view>
      <view class="actions">
        <view wx:if="{{!food.favor}}" class="icon favor" @tap="toggleFavor" />
        <view wx:if="{{food.favor}}" class="icon unfavor" @tap="toggleFavor" />
        <view class="icon order" @tap="addFood" />
      </view>
    </view>
    <view class="store">
      {{food.spplr.name}}
    </view>
    <view class="description">
      <wemark md="{{food.description}}" type="wemark" />
    </view>
    <view class="{{'dialog-wrapper' + (dialogOpen ? ' show' : '')}}" @tap="closeDialog">
      <view class="dialog" @tap.stop="doNothing">
        <view class="close" @tap="closeDialog" />
        <view class="head">
          <image src="{{food.image}}" mode="aspectFill" />
          <view class="name">{{food.name}}</view>
          <view class="price">¥ {{food.price}}</view>
          <view class="note">
            <view>{{food.heat}} Kcal</view>
            <view>适宜：{{food.tags}}</view>
          </view>
        </view>
        <view class="body">
          <view class="selection">
            <view class="title">
              计划哪天用餐
            </view>
            <view class="group">
              <view class="{{'item' + (selectedDietDays[item.day] ? ' selected' : '')}}" wx:for="{{days}}" wx:key="item.day" @tap="toggleDietDay({{item.day}})">
                {{item.label}}
              </view>
            </view>
          </view>
          <view class="selection">
            <view class="title">
              选择用餐时间
            </view>
            <view class="group">
              <view wx:for="{{food.labels}}" wx:key="index" class="{{'item' + (selectedDietLabel === item ? ' selected' : '')}}" @tap="selectDietLabel({{item}})">
                {{dietLabels[item]}}
              </view>
            </view>
          </view>
        </view>
        <view class="actions">
          <view class="button primary" @tap="addToDiet">
            加入到饮食计划
          </view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import {
  first,
  keys,
  some,
  find,
  each,
  remove,
  minBy,
  map,
  pickBy,
  range,
  last
} from 'lodash'
import dayjs from 'dayjs'
import API from '../api'
import ShoppingCart from '../services/shopping-cart'
import Header from '../components/header'

export default class extends wepy.page {
  config = {
    usingComponents: {
      wemark: '../components/wemark/wemark'
    },
    navigationBarTextStyle: 'white'
  }

  components = {
    header: Header
  }

  data = {
    id: null,
    food: null,
    days: [],
    pendingDiet: [],
    fixedDiet: [],
    selectedDietDays: {},
    dietLabels: {
      breakfast: '早餐',
      lunch: '中餐',
      supper: '晚餐'
    },
    selectedDietLabel: null,
    dialogOpen: false
  }

  methods = {
    doNothing() {},
    async toggleFavor() {
      this.food.favor = !this.food.favor
      const { id, favor } = this.food
      await API.setFoodFavor(id, favor)
      const title = this.food.favor ? '已收藏' : '已取消收藏'
      wepy.showToast({ title, icon: 'none' })
      this.$apply()
    },
    addFood() {
      this.selectedDietDays = {}
      if (this.food.labels.length === 1) {
        this.selectedDietLabel = first(this.food.labels)
      }
      this.dialogOpen = true
      this.$apply()
    },
    toggleDietDay(day) {
      this.selectedDietDays[day] = !this.selectedDietDays[day]
    },
    selectDietLabel(label) {
      this.selectedDietLabel = label
    },
    addToDiet() {
      const selectedDays = keys(pickBy(this.selectedDietDays, x => x))
      if (selectedDays.length === 0) {
        wepy.showToast({ title: '请选择计划用餐时间', icon: 'none' })
        return
      }
      if (!this.selectedDietLabel) {
        wepy.showToast({ title: '请选择用餐时间', icon: 'none' })
        return
      }

      // 检查是否与已固定的计划有冲突
      const hasConflict = some(selectedDays, day => {
        const conflict = find(this.fixedDiet, x => x.mealDate === day && x.labelAs === this.selectedDietLabel)
        if (conflict) {
          wepy.showModal({ content: `${dayjs(conflict.mealDate).format('ddd')}已下单${conflict.name}为${this.dietLabels[conflict.labelAs]}，如需更改请先撤销订单`, title: '提示', showCancel: false })
          return true
        }
      })
      if (hasConflict) {
        return
      }

      each(selectedDays, day => {
        remove(this.pendingDiet, x => x.mealDate === day && x.labelAs === this.selectedDietLabel)
        this.pendingDiet.push({
          mealDate: day,
          labelAs: this.selectedDietLabel,
          ...this.food,
          pending: true
        })
      })

      ShoppingCart.set(this.pendingDiet)

      this.selectedDietDays = {}
      this.selectedDietLabel = null
      this.dialogOpen = false
      this.selectedDay = minBy(selectedDays, x => dayjs(x).toDate())
      this.$apply()
    },
    closeDialog() {
      this.selectedDietDays = {}
      this.selectedDietLabel = null
      this.dialogOpen = false
    }
  }

  async loadSchedule() {
    this.days = map(range(7), x => {
      const date = dayjs().add(x, 'days')
      return {
        day: date.format('YYYY-MM-DD'),
        label: date.format('ddd')
      }
    })
    this.fixedDiet = await API.getDiet(first(this.days).day, last(this.days).day)
    this.pendingDiet = ShoppingCart.get() || []
    this.$apply()
  }

  async loadData() {
    this.food = await API.getFood(this.id)
    this.$apply()
  }

  onLoad(opts) {
    this.id = opts.id
    this.loadData()
    this.loadSchedule()
  }
}
</script>

<style lang="scss">
.container {
  background-color: #f8f8f8;
}

.header {
  position: relative;
  height: 225px;
  background-color: #eee;
  .image {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    background: #eee url() center / 100% no-repeat;
  }
}

.card {
  padding: 15px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  background-color: #fff;
  .info {
    .title {
      font-size: 18px;
      font-weight: 600;
      display: flex;
      flex-direction: row;
      align-items: center;
      .heat {
        margin: 0 10px;
        border: 1px solid;
        border-radius: 999px;
        padding: 2px 5px;
        font-size: 10px;
        line-height: 1;
        color: #38BA87;
      }
    }
    .price {
      font-size: 12px;
      color: #295059;
    }
  }
  .actions {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    .icon {
      display: block;
      width: 37px;
      height: 38px;
      padding: 10px;
      background: url() center center / 17px 18px no-repeat;
      &.favor {
        background-image: url('data:image/svg+xml,<svg width="17" height="18" xmlns="http://www.w3.org/2000/svg"><path d="M1.125 16.874l7.002-2.94 7.002 2.94V1.124H1.125v15.75zM0 1.124C0 .505.504 0 1.125 0H15.13c.622 0 1.125.504 1.125 1.125v15.749c0 .804-.82 1.348-1.56 1.037l-7.003-2.94h.872l-7.002 2.94A1.125 1.125 0 0 1 0 16.874V1.124zm8.127 9.655l2.196 1c.449.204.754-.024.692-.505l-.298-2.317 1.66-1.718c.33-.341.225-.7-.248-.789l-2.402-.447-1.171-2.058c-.233-.409-.624-.41-.866.014l-1.162 2.04-2.402.449c-.47.088-.584.441-.248.789l1.66 1.717-.299 2.317c-.062.48.248.708.692.506l2.196-.998zm.466 1.024l-2.196.998c-1.245.566-2.449-.316-2.274-1.673l.299-2.317.306.925-1.66-1.718c-.956-.99-.501-2.423.852-2.676l2.402-.449-.772.55 1.162-2.04c.669-1.174 2.153-1.19 2.822-.015l1.171 2.058-.772-.55 2.403.449c1.358.253 1.8 1.693.85 2.676l-1.66 1.717.307-.925.298 2.317c.175 1.358-1.025 2.24-2.274 1.673l-2.196-1h.932z" fill="#F5A623" fill-rule="nonzero"/></svg>');
      }
      &.unfavor {
        background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="#f14742" d="M463.515 0H48.485v512L256 381.446 463.515 512z"/><path d="M388.692 162.487c-.882-2.716-3.758-5.228-8.513-5.515l-84.734-5.664-31.571-78.837c-1.742-4.433-5.021-6.392-7.876-6.392s-6.134 1.959-7.876 6.392l-31.571 78.837-84.734 5.664c-4.755.287-7.631 2.799-8.513 5.515-.882 2.715-.032 6.439 3.645 9.465l65.222 54.387-20.797 82.336c-1.197 4.61.305 8.124 2.613 9.801 2.309 1.677 6.114 2.018 10.129-.544L256 272.712l71.88 45.222c4.015 2.562 7.819 2.221 10.129.544 2.31-1.678 3.81-5.192 2.613-9.801l-20.797-82.336 65.221-54.387c3.679-3.028 4.529-6.753 3.646-9.467z" fill="#ffd24d"/></svg>');
      }
      &.order {
        width: 52px;
        height: 52px;
        background-image: url('data:image/svg+xml,<svg width="18" height="18" xmlns="http://www.w3.org/2000/svg"><path d="M9 0a9 9 0 0 0-9 9 9 9 0 0 0 9 9 9 9 0 0 0 9-9 9 9 0 0 0-9-9zm5.192 9.53a.278.278 0 0 1-.277.278H9.808v4.107a.278.278 0 0 1-.277.277H8.469a.278.278 0 0 1-.277-.277V9.808H4.085a.278.278 0 0 1-.277-.277V8.469c0-.152.124-.277.277-.277h4.107V4.085c0-.153.125-.277.277-.277h1.062c.152 0 .277.124.277.277v4.107h4.107c.153 0 .277.125.277.277v1.062z" fill-rule="nonzero" fill="#38BA87"/></svg>');
        background-size: 32px 32px;
      }
    }
  }
}

.store {
  position: relative;
  margin-top: 1px;
  padding: 10px;
  padding-left: 45px;
  padding-right: 50px;
  font-size: 14px;
  background: #fff url() right 20px center / 7px 11px no-repeat;
  background-image: url('data:image/svg+xml,<svg width="7" height="11" xmlns="http://www.w3.org/2000/svg"><path d="M6.344 4.91L1.89.572a.704.704 0 0 0-.974 0 .66.66 0 0 0 0 .948L4.89 5.386.916 9.254a.658.658 0 0 0 0 .947c.268.26.704.26.974 0l4.454-4.338a.66.66 0 0 0 0-.953z" fill="#AEAEAE" fill-rule="evenodd"/></svg>');
  &:before {
    content: '';
    position: absolute;
    left: 15px;
    top: 0;
    bottom: 0;
    width: 20px;
    background: url() center center / 16px 16px no-repeat;
    background-image: url('data:image/svg+xml,<svg width="18" height="16" xmlns="http://www.w3.org/2000/svg"><g fill="#4a4a4a" fill-rule="nonzero"><path d="M2.445 1h13.11c.593 0 .593-1 0-1H2.445c-.593 0-.593 1 0 1zM4.084 6.343C4.02 7.635.98 7.635.916 6.343c-.023-.457-.938-.458-.916 0 .11 2.21 4.89 2.21 5 0 .022-.458-.893-.457-.916 0z"/><path d="M8.084 6.343c-.065 1.292-3.104 1.292-3.168 0-.023-.457-.938-.458-.916 0 .11 2.209 4.89 2.21 5 0 .022-.458-.894-.457-.916 0z"/><path d="M13.084 6.343c-.064 1.292-3.103 1.292-3.168 0-.022-.457-.938-.458-.916 0 .11 2.209 4.89 2.21 5 0 .022-.458-.893-.457-.916 0z"/><path d="M17.084 6.343c-.064 1.292-3.104 1.292-3.168 0-.023-.457-.938-.458-.916 0 .11 2.209 4.89 2.21 5 0 .022-.458-.893-.457-.916 0z"/><path d="M2.063.027C1.199-.222.699 1.317.518 1.825.092 3.02-.158 4.448.113 5.71c.11.51.909.293.8-.215-.181-.842-.02-1.976.221-2.87.157-.586.361-1.207.728-1.704.074-.1.188-.14.089-.102.042-.016-.057.003-.109-.012.515.148.733-.632.22-.779zM16.258.79c-.111.049-.117.057-.207.04.047.009-.083-.05.017.009a.672.672 0 0 1 .101.1c.386.42.548 1.112.699 1.636.254.884.4 2.036.22 2.87-.108.509.691.725.8.215.274-1.27.008-2.676-.404-3.883-.194-.57-.731-2.078-1.644-1.684-.489.21-.066.907.418.697zM15.989 12.54v1.558c0 .238.157 1.015-.286 1.015H2.295c-.506 0-.298-1.166-.298-1.432v-5.26c0-.562-.997-.562-.997 0v6.266c0 .595.27 1.101.98 1.272.228.055.515.026.748.026h11.829c.72 0 1.707.142 2.185-.449.346-.428.244-1.023.244-1.52v-1.477c0-.562-.997-.562-.997 0zM16 7.453v3.092c0 .605 1 .605 1 0V7.454c0-.605-1-.605-1 0z"/><path d="M7.823 15.56v-4.63c0-.044 1.118-.02 1.218-.02.081 0 1.136-.01 1.136.008v4.642c0 .587.823.587.823 0V10.918c0-.792-.65-.918-1.206-.918H7.99c-.553 0-.99.331-.99.99v4.57c0 .587.823.587.823 0z"/></g></svg>');
  }
}

.description {
  margin-top: 10px;
  padding: 20px;
  min-height: 400px;
  background-color: #fff;
}

.dialog {
  &>.head {
    position: relative;
    margin-top: -20px;
    margin-bottom: 20px;
    margin-right: 40px;
    image {
      margin-left: 10px;
      height: 135px;
      width: 135px;
      border-radius: 3px;
    }
    .name {
      position: absolute;
      left: 165px;
      top: 30px;
      font-size: 16px;
      font-weight: 500;
    }
    .price {
      position: absolute;
      left: 165px;
      top: 80px;
      font-size: 14px;
      color: #4A4A4A;
    }
    .note {
      position: absolute;
      left: 165px;
      top: 100px;
      font-size: 12px;
      color: #30B784;
    }
  }
}
</style>
