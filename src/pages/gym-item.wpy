<template>
  <view class="container">
    <view class="lesson-summary">
      <view class="title">{{gymItem.itemName}}</view>
      <view class="note">时长：{{gymItem.chargeStartTimeString}}-{{gymItem.chargeEndTimeString}} （{{gymItem.itemDuration}}分钟）</view>
      <view class="note">教练：{{gymItem.itemCoach}}</view>
      <view class="note">内容：{{gymItem.description}}</view>
      <view class="tip">
        <view class="title">温馨提示</view>
        <view class="content">请勿提前太早时间入场，建议提前10分钟内进入即可，若早于开始前15分钟进入或者课程结束后15分钟内没有离开，会产生自由锻炼的费用。</view>
        <view class="content">目前课程预定暂不支持退款，确定前请再三确认。</view>
      </view>
    </view>
    <view class="gap"/>
    <view class="date-list-wrapper">
      <view class="title">选择您要预定的时间</view>
      <view class="date-list">
        <view
          wx:for="{{dates}}"
          wx:key="date"
          class="{{item.date === selectedDate ? 'item selected' : 'item'}}"
          @tap="selectDate({{item}})"
        >
          <view class="weekday">{{item.weekday}}</view>
          <view class="day">{{item.day}}</view>
          <view class="remain" wx:if="{{remainMap[item.date] > 0}}">余{{remainMap[item.date]}}</view>
          <view class="remain empty" wx:else>无</view>
        </view>
      </view>
    </view>
    <view class="footer-bar">
      <button
        wx:if="{{getMobile}}"
        class="block-button primary"
        open-type="getPhoneNumber"
        disabled="{{!selectedDate}}"
        @getphonenumber="onGetPhoneNumber"
      >
        确认
      </button>
      <button
        wx:if="{{!getMobile}}"
        class="block-button primary"
        disabled="{{!selectedDate}}"
        @tap="book"
      >
        确认
      </button>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import dayjs from 'dayjs'
import API from '../api'
import Runtime from '../services/runtime'

export default class extends wepy.page {
  config = {
    navigationBarTitleText: '预定信息'
  }

  data = {
    id: null,
    gymItem: null,
    dates: [],
    remainMap: {},
    selectedDate: null,
    getMobile: false
  }

  methods = {
    selectDate(date) {
      if (this.remainMap[date.date] > 0) {
        this.selectedDate = date.date
      } else {
        wepy.showModal({
          content: '已预约满，请选择其他日期',
          showCancel: false
        })
      }
    },
    async onGetPhoneNumber(e) {
      const { iv, encryptedData } = e.detail
      if (!iv || !encryptedData) {
        wepy.showToast({ title: '请授权手机号', icon: 'none' })
        return
      }
      await API.setUserInfo(iv, encryptedData)
      Runtime.userInfo = await API.getUserInfo()
      this.getMobile = !Runtime.userInfo || !Runtime.userInfo.phone
      this.$apply()
      await this.book()
    }
  }

  async book() {
    const { confirm } = await wepy.showModal({
      title: '提示',
      content: '目前课程预定暂不支持退款，确定前请再三确认',
      confirmText: '我已知晓'
    })
    if (!confirm) return

    const { gymCode, itemCode, itemChargeCode } = this.gymItem
    const { orderNo } = await API.newBooking(gymCode, itemCode, itemChargeCode, this.selectedDate)
    const { params } = await API.pay(orderNo)
    const paramsObj = JSON.parse(params)
    await wepy.requestPayment(paramsObj)

    await wepy.showModal({
      title: '预定成功',
      content: `已成功预定${this.selectedDate} ${this.gymItem.itemName}`,
      showCancel: false
    })

    wepy.switchTab({ url: '/pages/tab-mine' })
  }

  initDates() {
    const dates = []
    for (let i = 0; i < 7; i++) {
      const date = dayjs().add(i, 'day')
      const item = {
        date: date.format('YYYY-MM-DD'),
        weekday: date.format('dd'),
        day: date.format('D')
      }
      if (date.isSame(dayjs(), 'day')) {
        item.day = '今天'
      }
      dates.push(item)
    }
    this.dates = dates
  }

  initRemainMap() {
    const remainMap = {}
    if (this.gymItem && this.gymItem.usageDates) {
      this.gymItem.usageDates.forEach(item => {
        remainMap[item.usageDate] = this.gymItem.reserveCount - item.reserveCount
      })
    }
    this.remainMap = remainMap
  }

  async loadData() {
    this.gymItem = await API.getGymItem(this.id)
    const dateString = dayjs().format('YYYY-MM-DD ')
    this.gymItem.chargeStartTimeString = dayjs(dateString + this.gymItem.chargeStartTime).format('HH:mm')
    this.gymItem.chargeEndTimeString = dayjs(dateString + this.gymItem.chargeEndTime).format('HH:mm')

    this.initRemainMap()
    const defaultDate = this.dates.find(date => this.remainMap[date.date] > 0)
    if (defaultDate) {
      this.selectedDate = defaultDate.date
    }

    this.$apply()
  }

  onLoad(opts) {
    this.id = opts.id
    this.initDates()
    this.loadData()
    if (!Runtime.userInfo || !Runtime.userInfo.phone) {
      this.getMobile = true
      Runtime.keepSession()
    }
  }
}
</script>

<style lang="scss">
.container {
  position: relative;
  min-height: 100vh;
  padding-bottom: calc(45px + env(safe-area-inset-bottom));
}
.lesson-summary {
  padding: 20px 15px;
  & > .title {
    font-size: 20px;
    font-weight: 500;
  }
  .note {
    margin-top: 15px;
    font-size: 13px;
  }
  .tip {
    margin-top: 20px;
    border-top: 1px solid #E8ECF0;
    font-size: 12px;
    & > .title {
      margin-top: 10px;
      color: #666;
    }
    & > .content {
      margin-top: 10px;
      color: #999;
    }
  }
}
.gap {
  height: 10px;
  background-color: #ECEFF2;
}
.date-list-wrapper {
  padding: 15px;
  .title {
    margin-top: 5px;
    margin-bottom: 15px;
    font-size: 15px;
    font-weight: 500;
  }
  .date-list {
    border-top: 1px solid #E8ECF0;
    padding-top: 15px;
    display: flex;
    flex-direction: row;
    .item {
      flex: 1;
      border-radius: 2px;
      min-width: 0;
      height: 102px;
      padding: 5px 0;
      display: flex;
      flex-direction: column;
      justify-content: space-around;
      align-items: center;
      overflow: hidden;
      font-size: 12px;
      &.selected {
        background-color: #30D6BA;
        color: #fff;
        .weekday {
          color: #fff;
        }
      }
      .weekday {
        font-size: 15px;
        color: #999;
      }
      .day {
        font-size: 15px;
        font-weight: 500;
      }
      .remain {
        font-size: 12px;
        &.empty {
          color: #1CAF9F;
        }
      }
    }
  }
}
</style>
