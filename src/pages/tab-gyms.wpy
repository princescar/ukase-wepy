<template>
  <view class="container">
    <view class="banner">
      <swiper indicator-dots="{{true}}" indicator-active-color="#fff" autoplay="{{true}}" circular="{{true}}">
        <swiper-item wx:for="{{banners}}" wx:key="id">
          <view class="image" style="background-image: url('{{item.bannerUrl}}');"/>
        </swiper-item>
      </swiper>
    </view>
    <view class="filter-area">
      <picker
        class="filter"
        range="{{distances}}"
        range-key="label"
        value="{{distanceIndex}}"
        @change="onRangeChanged"
      >
        {{distances[distanceIndex].label}}
        <view class="icon triangle"/>
      </picker>
      <picker
        class="filter"
        range="{{sortings}}"
        range-key="label"
        value="{{sortingIndex}}"
        @change="onSortingChanged"
      >
        {{sortings[sortingIndex].label}}
        <view class="icon triangle"/>
      </picker>
      <picker
        class="filter"
        range="{{filters}}"
        range-key="label"
        value="{{filterIndex}}"
        @change="onFilterChanged"
      >
        {{filters[filterIndex].label}}
        <view class="icon triangle"/>
      </picker>
    </view>
    <view class="gym-list">
      <view class="item" wx:for="{{gyms}}" wx:key="id" @tap="detail({{item}})">
        <image src="{{item.thumbnail}}" mode="aspectFill" />
        <view class="summary">
          <view class="title-line">
            <view class="title">{{item.name}}</view>
            <view class="location" wx:if="{{hasUserLocation}}">
              {{distance.format(item.distance)}}
            </view>
          </view>
          <view class="rating star-{{item.rating}}"/>
          <view class="note">{{item.district}} | {{item.category}}</view>
          <view class="price" wx:if="{{item.leastAmount}}">
            <text class="amount">¥{{item.leastAmount}}</text> 起
          </view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import API from '../api'
import distance from '../filters/distance.wxs'

export default class extends wepy.page {
  config = {
    navigationBarTitleText: '健身中心',
    backgroundColorBottom: '#657B8C'
  }

  wxs = {
    distance
  }

  data = {
    banners: [],
    gyms: [],
    distances: [
      { label: '附近3km', value: { max: 3000, min: 0 } },
      { label: '附近10km', value: { max: 10000, min: 0 } },
      { label: '附近30km', value: { max: 30000, min: 0 } },
      { label: '不限距离', value: null }
    ],
    distanceIndex: 3,
    sortings: [
      { label: '距离优先', value: { key: 'distance', direction: 'asc' } },
      { label: '评分优先', value: { key: 'rating', direction: 'desc' } },
      { label: '低价优先', value: { key: 'hourlyPrice', direction: 'asc' } },
      { label: '高价优先', value: { key: 'hourlyPrice', direction: 'desc' } }
    ],
    sortingIndex: 0,
    filters: [
      { label: '全部', value: { key: null } },
      { label: '健身房', value: { key: '健身房' } },
      { label: '工作室', value: { key: '工作室' } }
    ],
    filterIndex: 0,
    hasUserLocation: false
  }

  methods = {
    detail(item) {
      wepy.navigateTo({ url: `/pages/gym?id=${item.gymCode}` })
    },
    onRangeChanged(e) {
      if (!this.hasUserLocation) {
        wepy.showToast({ title: '需要您的当前位置才能基于距离筛选', icon: 'none' })
        return
      }
      this.distanceIndex = e.detail.value
      this.loadData()
    },
    onSortingChanged(e) {
      this.sortingIndex = e.detail.value
      this.loadData()
    },
    onFilterChanged(e) {
      this.filterIndex = e.detail.value
      this.loadData()
    }
  }

  async loadBanners() {
    this.banners = await API.getBanners()
    this.$apply()
  }

  async loadData() {
    let location = null
    try {
      location = await wepy.getLocation()
      this.hasUserLocation = true
    } catch (e) {
      this.hasUserLocation = false
    }
    const { rows } = await API.searchGyms({
      location,
      distance: this.distances[this.distanceIndex].value,
      sortBy: this.sortings[this.sortingIndex].value,
      filter: this.filters[this.filterIndex].value
    })
    this.gyms = rows
    this.$apply()
  }

  onShow() {
    this.loadBanners()
    this.loadData()
    if (typeof this.$wxpage.getTabBar === 'function' && this.$wxpage.getTabBar()) {
      this.$wxpage.getTabBar().setData({ selected: 0 })
    }
  }
}
</script>

<style lang="scss">
.container {
  min-height: 100vh;
  padding-bottom: calc(48px + env(safe-area-inset-bottom));
  background-color: #657B8C;
}

.banner {
  swiper {
    height: 44vw;
    .image {
      height: 100%;
      overflow: hidden;
      background-repeat: no-repeat;
      background-position: center;
      background-size: cover;
    }
  }
}

.filter-area {
  padding: 9px 15px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  background-color: #F6F6F6;
  .filter {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    font-size: 14px;
    color: #666;
    .icon {
      display: inline-block;
      height: 10px;
      width: 10px;
      background-size: 10px 8px;
      background-repeat: no-repeat;
      background-position: center;
      &.triangle {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 292.362 292.362'%3E%3Cpath fill='%23999' d='M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z'/%3E%3C/svg%3E");
      }
      &.funnel {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='%23999' d='M2 2h13v2l-5 5v7l-3-2V9L2 4zM2 0h13v1H2V0z'/%3E%3C/svg%3E");
      }
    }
  }
}

.gym-list {
  flex: 1;
  overflow: hidden;
  .item {
    position: relative;
    margin: 15px;
    border-radius: 4px;
    padding: 10px;
    display: flex;
    flex-direction: row;
    background-color: #fff;
    image {
      height: 94px;
      width: 94px;
    }
    .summary {
      flex: 1;
      padding-left: 10px;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      overflow: hidden;
    }

    .title-line {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
    }

    .title {
      flex: 1;
      font-size: 15px;
      font-weight: 500;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }

    .location {
      padding-left: 15px;
      font-size: 13px;
      color: #999;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23999' d='M12 0C7.038 0 3 4.066 3 9.065c0 7.103 8.154 14.437 8.501 14.745a.749.749 0 00.998.001C12.846 23.502 21 16.168 21 9.065 21 4.066 16.962 0 12 0zm0 14c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z'/%3E%3C/svg%3E");
      background-size: 13px 13px;
      background-repeat: no-repeat;
      background-position: left center;
    }

    .note {
      margin: 5px 0;
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      color: #888;
      font-size: 11px;
    }

    .price {
      font-size: 12px;
      font-weight: 500;
      color: #F86D24;
      .amount {
        font-size: 15px;
      }
    }
  }
}
</style>
